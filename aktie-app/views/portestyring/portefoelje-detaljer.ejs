<!DOCTYPE html>
<html lang="da">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Portefølje detaljer</title>
  <link rel="stylesheet" href="/portefoljeDetalje.css">

    <!-- link til charts -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

</head>

<body>

  <!-- Sidebar -->
  <aside class="sidebar">
    <div class="logo">
      <h3>SYDNET</h3>
    </div>

    <ul>
      <li><a href="/dashboard">Dashboard</a></li>
      <li><a href="/portefoljestyring/konto/<%= konto_id %>">Min porteføljeoversigt</a></li>
      <li><a href="/portefoljestyring/kontooplysninger">Kontooplysninger</a></li>

    </ul>


  </aside>

  <main class="main-content">
    <div class="header">
      <h1>
        <%= portefolje.navn %>
      </h1>
      <div class="header-buttons">
        <button class="handels-knap" onclick="åbnHistorikPopup()">Handels Historik</button>
        <button class="handels-knap" onclick="åbnPopup()">Opret Handel/Salg</button>
      </div>
    </div>


    <div class="grid-layout">
      <!-- Line Chart Placeholder (test) -->
      <div class="chart-card">
        <h3>Samlet Værdi af portefølje</h3>
        <div class="chart-placeholder" id="line-chart">

          <canvas id="accountChart"> 

          </canvas>


        </div>
      </div>

      <!-- Donut Chart og Total værdi (test) -->
      <div class="summary-card">
        <div class="chart-placeholder" id="donut-chart">
          <canvas id="portfolioPieChart">
          </canvas>
        </div>

         <!-- Oprettels af salg -->
  <%
  const ejerListe = [];

  for (let i = 0; i < handler.length; i++) {
    const h = handler[i];
    const symbol = h.symbol;
    const antal = h.antal;
    const erSalg = h.salg_koeb;

    let fundet = false;

    for (let j = 0; j < ejerListe.length; j++) {
      if (ejerListe[j].symbol === symbol) {
        if (erSalg) {
          ejerListe[j].antal -= antal;
        } else {
          ejerListe[j].antal += antal;
        }
        fundet = true;
        break;
      }
    }

    if (!fundet) {
      let antalTilføj;
      if (erSalg) {
        antalTilføj = -antal;
      } else {
        antalTilføj = antal;
      }

      ejerListe.push({
        symbol: symbol,
        antal: antalTilføj
      });
    }
  }

  const ejerListeFiltreret = ejerListe; // behold hele listen uden filtrering

%>

        
      <!-- udrgning til samlet værdi af alle værdipapir i porteføljen -->
        <% 
        let totalVaerdi = 0;
        for (let i = 0; i < ejerListeFiltreret.length; i++) {
          const e = ejerListeFiltreret[i];
        
          if (e.antal > 0) {
            let pris = 0;
        
            for (let j = 0; j < handler.length; j++) {
              if (handler[j].symbol === e.symbol) {
                pris = handler[j].pris;
                break;
              }
            }
        
            totalVaerdi += e.antal * pris;
          }
        }        
        %>
        <ul class="egend">
          <li><span></span> AAPL - 35%</li>
          <li><span></span> AAPL - 35%</li>
          <li><span></span> AAPL - 35%</li>
          <li><span></span> AAPL - 35%</li>
        </ul>
        <div class="total-value">
          <p>Total værdi i DKK</p>
          <h2><%= totalVaerdi.toFixed(2) %> DKK</h2>
        </div>        
      </div>
    </div>

    <!-- Aktie tabel -->
    <section class="stock-table">
      <h3>Aktier i portefølje</h3>
      <table>
        <thead>
          <tr>
            <th>Navn</th>
            <th>Volume</th>
            <th>24h Change</th>
            <th>Pris</th>
            <th>Værdi</th>
          </tr>
        </thead>
    
            <!-- Tabel for akter brugern ejer Dummy data der skal erstates med live data -->
            <tbody>
              <% for (let i = 0; i < ejerListeFiltreret.length; i++) {
                   const e = ejerListeFiltreret[i];
            
                   // find første handler med samme symbol (for at få navn og pris)
                   let navn = "";
                   let pris = 0;
                   for (let j = 0; j < handler.length; j++) {
                     if (handler[j].symbol === e.symbol) {
                       navn = handler[j].navn;
                       pris = handler[j].pris;
                       break;
                     }
                   }
            
                   if (e.antal > 0) { %>
                <tr>
                  <td><%= navn %><br><small><%= e.symbol %></small></td>
                  <td><%= e.antal %> stk.</td>
                  <td class="positive">+1.27%</td>
                  <td><%= pris %> DKK</td>
                  <td><%= (e.antal * pris).toFixed(2) %> DKK</td>
                </tr>
              <% } %>
              <% } %>
            </tbody>   
      </table>
    </section>
  </main>

  <!--pop up til opret handel eller salg-->
  <div id="popup" class="popup" style="display:none;">
    <div class="popup-indhold">
      <h2>Opret Handel</h2>

      <!--vi laver en switch mulighed så brugeren kan vælge om de vil sælge eller købe værdipapir-->

      <label>Vælg handelstype:</label>
      <label class="switch">
        <input type="checkbox" id="handelstype-toggle">
        <span class="slider round"></span>
      </label>
      <span id="handelstype-label">Køb</span>

<!--search bar-->
<input type="text" id="aktieSøg" placeholder="Søg værdipapir">
<ul id="vaerdiResultat"></ul>

      <!--Handels form-->

      <form id="handelForm">


        <input type="number" id="antal" placeholder="Antal" required>

        <!-- Pris per aktie (udfyldes automatisk) -->
        <label for="samlet_pris"> Pris</label> 
        <input type="number" id="samlet_pris" placeholder="pris" readonly>
       
        <!-- Beregnet pris vises her -->
        <p id="beregnet_pris">Samlet</p>

        <label>Værdi-type:</label>
        <select id="værditype" name="værditype" required>
          <option value="aktie">Aktie</option>
          <option value="obligation">Obligation</option>
          <option value="ETF">ETF</option>
        </select>

        <button class="popup-knap" type="submit">Bekræft Handel/Salg</button>
      </form>
      <button class="popup-knap" onclick="lukPopup()">Luk</button>

    </div>
  </div>

    <!--pop up til handels historik-->
  <div id="historikPopup" class="popup" style="display: none;">
    <div class="popup-indhold">
      <h2>Handelshistorik</h2>
      <table>
        <thead>
          <tr>
            <th>Dato</th>
            <th>Type</th>
            <th>Symbol</th>
            <th>Antal</th>
            <th>Pris</th>
            <th>Total</th>
          </tr>
        </thead>
        <tbody>
          <% for (let i = 0; i < handler.length; i++) {
              const h = handler[i];
              const total = (h.antal * h.pris).toFixed(2);
          %>
            <tr>
              <td><%= new Date(h.datotid).toLocaleDateString() %></td>
              <td>
                <% if (h.salg_koeb) { %>
                  Salg
                <% } else { %>
                  Køb
                <% } %>
              </td>              
              <td><%= h.symbol %></td>
              <td><%= h.antal %></td>
              <td><%= h.pris %> DKK</td>
              <td><%= total %> DKK</td>
            </tr>
          <% } %>
        </tbody>
      </table>
      <button onclick="lukPopup()">Luk</button>
    </div>
  </div>

 
    <!-- **************************** SCRIPT START ********************** -->

  <script>

    // tager fat i id for konti og portefølje ( jeg tror det skla bruges til backedt senere hen) 
    const konto_id = "<%= konto_id %>";
    const portefolje_id = "<%= portefolje.portefoelje_id %>";

  const brugerensAktier = JSON.parse('<%- JSON.stringify(ejerListeFiltreret) %>');

  //Debug
  console.log("Aktier brugeren ejer:", brugerensAktier);


    // funktion til at åbne popup for opret handel eller salg
    function åbnPopup() {
      document.getElementById("popup").style.display = "block";
    };

     // funktion til at åbne popup for handels historik
    function åbnHistorikPopup() {
  document.getElementById("historikPopup").style.display = "block";
}


    // funktionen til at lukke popup
    function lukPopup() {
      // Lukker begge popup, hvis den er synlig
      document.getElementById('popup').style.display = 'none';
      document.getElementById('historikPopup').style.display = 'none';
    };

    // funktion til at opdatere handelstype
    const toggle = document.getElementById("handelstype-toggle");
    const label = document.getElementById("handelstype-label");


      toggle.addEventListener("change", function () {
  if (toggle.checked) {
    label.textContent = "Salg";
  } else {
    label.textContent = "Køb";
  }
});

  
    // nu tager vi fat i vores data

    document.addEventListener("DOMContentLoaded", function () {
    const form = document.getElementById("handelForm")
    
    form.addEventListener("submit", async function (element) {
      element.preventDefault();


  // Hent aktuel værdi fra toggle direkte
  const isSalg = document.getElementById("handelstype-toggle").checked;
  const type = isSalg ? "salg" : "kob";


      // Tjek om brugeren ejer nok til at sælge aktien 
    
    if (type === "salg") {
  let fundet = false;
  let ejerAntal = 0;

  for (let i = 0; i < brugerensAktier.length; i++) {
    if (brugerensAktier[i].symbol === valgtAktie.symbol) {
      ejerAntal = brugerensAktier[i].antal;
      fundet = true;
      break;
    }
  }

  const antalBrugerVilSælge = parseInt(document.getElementById("antal").value);

  if (!fundet) {
    alert("Du ejer ikke denne aktie og kan derfor ikke sælge den.");
    return;
  }

  if (antalBrugerVilSælge > ejerAntal) {
    alert(`Du prøver at sælge ${antalBrugerVilSælge} stk, men du ejer kun ${ejerAntal} stk.`);
    return;
  }
};

      const data = {
        konto_id,
        vaerditype: document.getElementById("værditype").value,
        antal: document.getElementById("antal").value,
        pris: document.getElementById("samlet_pris").value,
        valuta: "DKK",
        type,
        symbol: valgtAktie.symbol
      };


      const svar = await fetch(`/portesiden/${portefolje_id}/handel`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(data)
      });

      const resultat = await svar.json();

      if (resultat.success) {
  if (type === "kob") {
    alert("Handel oprettet!");
  } else if (type === "salg") {
    alert("Salg gennemført!");
  }
  lukPopup();
  location.reload(); // Genindlæser siden
} else {
  alert("Noget gik galt");
}

  });
    });
  


    
    //**************************** SEARCHBAR FUNKTIONALITET ********************** -->

    // Dette er til searchbar her bruges der dummy data lige nu, men skal udvides med live data


  let valgtAktie = null; // vi antager at  brugeren ikke har valgt en aktie 

const aktier = [
  { symbol: "AAPL", navn: "Apple Inc.", pris: 145 },
  { symbol: "TSLA", navn: "Tesla", pris: 215 },
  { symbol: "MSFT", navn: "Microsoft", pris: 320 },
  { symbol: "NFLX", navn: "Netflix", pris: 405 }
];


const input = document.getElementById("aktieSøg");
const resultatListe = document.getElementById("vaerdiResultat");

// når brugeren søger 
input.addEventListener("input", function () {
  let søg = input.value

  resultatListe.innerHTML = ""; // fjern gamle resultater


  // loop gennem alle aktier (dummy data)
  for (let i = 0; i < aktier.length; i++) {
    let aktie = aktier[i];
    let symbol = aktie.symbol.toLowerCase();
    let navn = aktie.navn.toLowerCase();

// tjek om søg findes i symbol eller navn 
if(symbol.includes(søg)|| navn.includes(søg)){
  let li = document.createElement("li"); // vi laver en liste element som viser aktien
  li.textContent = `${aktie.symbol} - ${aktie.navn}`; // her stiller vi dem op
 

  // opretter klikke funktionaliteten 
  li.addEventListener("click", function () {
  input.value = aktie.symbol;  // ticker-symbolet automatisk bliver sat ind i søgefeltet,
  resultatListe.innerHTML = ""; // luk listen

  // vi tager fat i prisen for den pågældende aktie og udfylder pris feltet på popup automatisk
  document.getElementById("samlet_pris").value = aktie.pris 
  valgtAktie = aktie // nu har brugeren valgt en aktie og vi husker den

  });
  resultatListe.appendChild(li);
  }
}
});
//*********************************************chart for line ********************************


// opertter en funktion der ganger antallet af de valgte aktier med prisen 
  function  beregnSamletPris(){

// henter antalet af aktier vagt 
const antal = parseFloat(document.getElementById("antal").value);
 const visning = document.getElementById("beregnet_pris")


      if(antal > 0) {
      let samlet = valgtAktie.pris * antal; 

    visning.textContent = ` Samlet: ${samlet} DKK`  // vi viser den samlet beregnet pris 
  
      };
    };

  // Når brugeren skriver antal så kalder vi på funktionen der beregner prisen
document.getElementById("antal").addEventListener("input", function () {
  beregnSamletPris();
});



document.addEventListener('DOMContentLoaded', function() {
    const ctx = document.getElementById('accountChart').getContext('2d');
    
    // Dummy data - kan erstattes med rigtige data senere
    const data = {
        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'Maj', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec'],
        datasets: [{
            label: 'Portfolio Værdi',
            data: [100000, 120000, 115000, 130000, 140000, 135000, 150000, 160000, 165000, 175000, 180000,190000],
            borderColor: '#007bff',
            backgroundColor: 'rgba(0, 123, 255, 0.1)',
            fill: true,
            tension: 0.4,
            borderWidth: 2
        }]
    };

    const config = {
        type: 'line',
        data: data,
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: true,
                    labels: {
                        color: '#fff'
                    }
                }
            },
            scales: {
                y: {
                    beginAtZero: false,
                    grid: {
                        color: 'rgba(255, 255, 255, 0.1)'
                    },
                    ticks: {
                        color: '#fff'
                    },
                    // Tilføj dette for at give overhead i grafen
                    suggestedMax: function(context) {
                        const maxValue = Math.max(...context.chart.data.datasets[0].data);
                        return maxValue * 1.15; // Giver 15% overhead over højeste værdi
                    }
                },
                x: {
                    grid: {
                        color: 'rgba(255, 255, 255, 0.1)'
                    },
                    ticks: {
                        color: '#fff'
                    }
                }
            }
        }
    };

    new Chart(ctx, config);
});


//*********************************************chart for donut chart ********************************

document.addEventListener('DOMContentLoaded', function () {
    const ctx = document.getElementById('portfolioPieChart').getContext('2d');

    // Rå labels og værdier
    const rawLabels = ['Growth Tech', 'Tech Leaders', 'ETF', 'Space & Defence', 'E-com'];
    const values = [35, 12, 24, 14, 15];

    // 1. Beregn totalen manuelt
    let total = 0;
    for (let i = 0; i < values.length; i++) {
        total = total + values[i];
    }

    // 2. Lav labels med procent
    let labels = [];
    for (let i = 0; i < rawLabels.length; i++) {
        let procent = (values[i] / total) * 100;
        procent = procent.toFixed(1); // Vis kun 1 decimal
        let labelMedProcent = rawLabels[i] + ' (' + procent + '%)';
        labels.push(labelMedProcent);
    }

    const data = {
        labels: labels,
        datasets: [{
            data: values,
            backgroundColor: [
                'rgba(54, 162, 235, 0.8)',   // Blå
                'rgba(75, 192, 192, 0.8)',   // Turkis
                'rgba(255, 159, 64, 0.8)',   // Orange
                'rgba(153, 102, 255, 0.8)',  // Lilla
                'rgba(201, 203, 207, 0.8)'   // Grå
            ],
            borderColor: '#ffffff', // Hvid kant
            borderWidth: 2,
            cutout: '65%' // Donut-udskæring
        }]
    };

    const config = {
        type: 'doughnut',
        data: data,
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'right',
                    labels: {
                        color: '#ffffff', // Hvid tekst
                        font: {
                            size: 14,
                            family: 'Arial, sans-serif'
                        },
                        padding: 15,
                        usePointStyle: true
                    }
                },
                title: {
                    display: true,
                    text: 'Fordeling af værdi i portefølje',
                    color: '#ffffff', // Hvid titel
                    font: {
                        size: 18,
                        weight: 'bold',
                        family: 'Arial, sans-serif'
                    },
                    padding: {
                        bottom: 20
                    }
                }
            },
            layout: {
                padding: {
                    top: 20,
                    bottom: 20,
                    left: 20,
                    right: 20
                }
            }
        }
    };

    const myChart = new Chart(ctx, config);
});


  </script>

</body>

</html>