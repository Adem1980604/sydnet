<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Kontooversigt</title>
  <link rel="stylesheet" type="text/css" href="/kontooplyStyle.css">
</head>

<body>
  <div class="container">
    <!-- Navigation Sidebar -->
    <aside class="sidebar">
      <div class="logo">
        <h3>SYDNET</h3>
      </div>
     
      <ul>
        <li><a href="/bruger/dashboard">Dashboard</a></li>
        <li><a href="/portefoljestyring/kontooplysninger">Kontooplysninger</a></li>
        <li><a href="/portefoljestyring/portefoeljeoversigt">Porteføljeoversigt</a></li>
      </ul>
    </aside>

    <!-- Hovedsektion til kontoliste -->
    <main class="content">
      <h1>Kontooversigt</h1>
      <div id="konto-container"></div>

      <section id="lukkede-konti-sektion" class="lukkede-konti-sektion" style="display: none;">
        <h2>Lukkede konti</h2>
        <div id="lukkede-konti-container"></div>
      </section>
    </main>

    <!-- Rightsidebar til handlinger -->
    <aside class="sidebar2" id="opretKontoSidebar">
      <h2>Opret konto</h2>
      <form id="konto_form">
        <label for="navn">Navn på konto:</label>
        <input type="text" id="navn" name="navn" required>
    
        <label for="bank">Tilknyttet Bank:</label>
        <input type="text" id="bank_ref" name="bank" required>
    
        <label for="bank">Valuta for konto:</label>
        <input type="text" id="konto_valuta" name="konto_valuta" required>
    
        <button type="button" onclick="sendkonto();this.form.reset();">Opret konto</button>
      </form>
    
      <!-- Bruges til at vise alle konti der er lukkede  -->
      <button onclick="hentLukkedeKonti()">Vis lukkede konti</button>
      <div id="lukkede-konti-knap"></div>
    </aside>
    </div>


  <!-- Popup til indsættelse -->
  <div id="popup">
    <h3>Indsæt eller hæv penge på kontoen</h3>
    <label for="værdi">Beløb:</label>
    <input type="text" id="værdi"><br>
    <label for="valuta">Valuta:</label>
    <select id="indsæt-valuta">
      <option value="DKK">DKK</option>
      <option value="USD">USD</option>
      <option value="EUR">EUR</option>
    </select><br><br>
    <button onclick="indsaetData()">Indsæt</button>
    <button onclick="haevData()">Hæv</button>
    <button onclick="lukPopup()">Luk</button>
  </div>

  <!-- Luk knap til forskellige popup resultater -->
  <div id="resultat">
    <button id="luk-resultat" class="luk-knap"></button>
  </div>

  <!--popup til at lukke konto-->
  <div id="lukKontoPopup">
  <!--<div id="lukPopup">-->
    <h3>Er du sikker på at du vil lukke kontoen? </h3>
    <button onclick="bekraeftLukning()">Ja, jeg vil gerne lukke denne konto</button>
    <button onclick="lukPopup()">Fortryd lukning</button>
  </div>

  <!-- **************************** JS-SCRIPT START ********************** -->
  <script>
    // Her oprettes globale variable som kan anvendes på tværs af funktioner
    let valgtKontoId = null;        //Vi antager at der ikke er valgt en konto i starten
    let kontoIdTilSletning = null;
    let nuvaerendeSaldo = null;

    // Sender info om ny konto der skal oprettes(Sendes til portefoljestyring.js)       
    async function sendkonto() {
      //Gemmer info givet af bruger
      let nyKonto = {
        navn: document.getElementById("navn").value,
        bank_ref: document.getElementById("bank_ref").value,
        konto_valuta: document.getElementById("konto_valuta").value
      };
      //Tjekker at ingen felter er tomme
      if (nyKonto.navn == "" || nyKonto.bank_ref == "" || nyKonto.konto_valuta == "") {
        alert("Alle felter skal udfyldes!");
      } else {
        //Send post til portefoljestyring med info om den nye konto der skal oprettes
        const svar = await fetch('/portefoljestyring/kontooplysninger', {
          method: 'POST',
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(nyKonto)
        });
        //Hvis fetchen til portefoljestyring gik godt, så kald hentKonti, for at vise den nye konto
        if (svar.ok) {
          await hentKonti();
          console.log("**********Debug014************");
        };
      };
  };

    // Hent konti og så vis dem 
    async function hentKonti() {
      // Kalder "hentkontooplysninger" i portefoljestyring
      // Den henter alle aktive konti brugeren ejer
      const response = await fetch('/portefoljestyring/hentkontooplysninger');
      //console.log(response);
      //Gemmer konti i en variable
      const konti = await response.json();
      //Får fat i konto-container, som skal indeholde listen med konti
      const container = document.getElementById("konto-container");
      // Ryd gammel liste med konti
      container.innerHTML = "";
      //For-loop gennem alle konti i listen
      for (let i = 0; i < konti.length; i++) {
        const kontoElement = document.createElement("div");
        kontoElement.classList.add("konto-liste");
        //Skriver information samt sætter knapper på hver konto
        kontoElement.innerHTML =
          `
          <p><strong>Navn:</strong> ${konti[i].navn}</p>
          <p><strong>Saldo:</strong> ${konti[i].saldo}</p>
          <p><strong>Tilknyttet Bank:</strong> ${konti[i].bank_ref}</p>
          <button onclick="gaaTilKonto(${konti[i].konto_id})">Se detaljer</button>
          <button onclick="aabenIndsaetPopup(${JSON.stringify(konti[i].konto_id)},${JSON.stringify(konti[i].saldo)})">Indsæt eller hæv penge</button>
          <button onclick="LukKonto(${JSON.stringify(konti[i].konto_id)})">Luk konto</button>
          <hr>
        `;

        //console.log("DEBUG 060  ***************");
        //Tilføjer alle konti til konto-container
        container.appendChild(kontoElement)
        
      }
    }

    // Redirection bruger videre til individuel konto-detalje siden
    function gaaTilKonto(id) {
      window.location.href = `/konto/${id}`;
    }

    // Indsæt penge
    function aabenIndsaetPopup(konto_id,saldo) {
      valgtKontoId = JSON.stringify(konto_id);
      nuvaerendeSaldo = saldo;
      document.getElementById('popup').style.display = 'block';
    }

    // funktionen til at lukke popups
    function lukPopup() {
      // Lukker begge popups, hvis de er synlige
      document.getElementById('popup').style.display = 'none';
      document.getElementById('lukKontoPopup').style.display = 'none';
    }


    // Send indsættelse
    async function indsaetData() {
      //Data for indsættelsen bliver gemt
      const data = {
        vaerdi: (document.getElementById("værdi").value),
        valuta: document.getElementById("indsæt-valuta").value,
        konto_id: valgtKontoId
        
      };
      //Tjekker om beløbet er større end 0
      if (data.vaerdi <= 0) {
        console.log("Beløb til indsættelse skal være større end nul.", data);
        return alert("Beløb til indsættelse skal være større end nul.");
      }

      //console.log(" Sender til server:", data);
      //Sender post til bruger.js med data om indsættelsen
      const svar = await fetch('/bruger/indsaetter', {
        method: 'POST',
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(data)
      });
      //Får svar tilbage
      const result = await svar.json();
      //console.log(" Server svar:", result);

      // Kode til at vise indsættelsen 
      if (result.success) {
        hentKonti(); // opdater listen med ny saldo
        //Udtag det data vi gerne vil have fra vores post request
        const inds = result.indsaettelse;
        

        const resultatDiv = document.getElementById("resultat");
        
        resultatDiv.innerHTML =
          `
          <button id="luk-resultat" class="luk-knap">Luk</button>
          <h3>Indsættelse oprettet!</h3>
          <p>Beløb: ${inds.vaerdi} ${inds.valuta}</p>
          <p>Konto-ID: ${inds.konto}</p>
          <p>Dato og tid for oprettelse: ${inds.tid}</p>
          `;
        
        resultatDiv.style.display = "block";
        document.getElementById("luk-resultat").addEventListener("click", () => {
        resultatDiv.style.display = "none";
        });
        lukPopup();
      }
    }


    // Send hævning
    async function haevData() {
      const data = {
        vaerdi: (document.getElementById("værdi").value),
        valuta: document.getElementById("indsæt-valuta").value,
        konto_id: valgtKontoId
      };

      if (data.vaerdi >= 0) {
        console.log("Beløb til hævning skal være mindre end nul.", data);
        return alert("Beløb til hævning skal være mindre end nul.");
      }

      if(nuvaerendeSaldo < data.vaerdi*-1) {
        console.log("Der er ikke dækning på kontoen til at hæve dette beløb");
        return alert("Der er ikke dækning på kontoen til at hæve dette beløb");
      }
// sender til bruger js under ruten indsaetter linje 187
      //console.log(" Sender til server:", data); 
      const svar = await fetch('/bruger/indsaetter', {
        method: 'POST',
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(data)
      });
      const result = await svar.json();
      console.log(" Server svar:", result);

      // Kode til at vise indsættelsen 
      if (result.success) {
        hentKonti(); // opdater listen med ny saldo
        const inds = result.indsaettelse;
        const resultatDiv = document.getElementById("resultat");
        resultatDiv.innerHTML =
          `
          <button id="luk-resultat" class="luk-knap">Luk</button>
          <h3>Hævning oprettet!</h3>
          <p>Beløb: ${inds.vaerdi} ${inds.valuta}</p>
          <p>Konto-ID: ${inds.konto}</p>
          <p>Dato og tid for oprettelse: ${inds.tid}</p>
          `;
        resultatDiv.style.display = "block";
        document.getElementById("luk-resultat").addEventListener("click", () => {
          resultatDiv.style.display = "none";
        });
        lukPopup();
      }
    }


    //Husk kontoId og luk popup
    function LukKonto(kontoId) {
      //Gemmer konto id og giver variable videre til "bekraeftLukning"
      kontoIdTilSletning = kontoId;
      //Vis "konto luk" popup'en
      document.getElementById('lukKontoPopup').style.display = 'block';
    }


    // Luk en konto(Bekraftlukning bliver kaldt når en bruger trykker på den knap)
    async function bekraeftLukning() {
      // Sender det konto id der skal slettes til portefoljestyring.js
      const svar = await fetch(`/portefoljestyring/slet-konto/${kontoIdTilSletning}`, {
        method: 'DELETE'
    });
    // Afventer svar
      const resultat = await svar.json();
      // Hvis svaret er korrekt så skriv det til brugeren og luk popup
      if (resultat.success) {
        alert("Konto lukket.");
        hentKonti();
      } else {
        alert("Noget gik galt.");
      }
      // Skjul popup igen
      lukPopup(); 
    }

    // Funktionen til at vise alle lukkede konti. 
    async function hentLukkedeKonti() {
      const response = await fetch('/portefoljestyring/hent-lukkede-konti');
      const konti = await response.json();


      const container = document.getElementById("lukkede-konti-container");
      const sektion = document.getElementById("lukkede-konti-sektion"); // vi tager fat i sektions elementet fordi vi kun vil have den vist når der er lukkede konti

      container.innerHTML = "";

      // Vis sektionen, fordi der er mindst én lukket konto
      sektion.style.display = "block";
      for (let i = 0; i < konti.length; i++) {

        const lukKontoElement = document.createElement("div");
        lukKontoElement.classList.add("konto-liste");

        lukKontoElement.innerHTML =
          `
        <p><strong>Navn:</strong> ${konti[i].navn}</p>
        <p><strong>Tilknyttet Bank:</strong> ${konti[i].bank_ref}</p>
        <button onclick="genaktiverKonto(${konti[i].konto_id})">Genaktiver</button>
        <hr>
      `;
        container.appendChild(lukKontoElement)
      }
      // Hvis der er ingen lukkede konti, så skjul section og skriv besked
      if (konti.length === 0) {
        container.innerHTML = "<p>Ingen lukkede konti.</p>";
        sektion.style.display = "none"; // Skjul sektionen
        return;
      }

    }

    //Genåben en lukket konto 
    async function genaktiverKonto(kontoId) {
      //Sender post til portefoljestyring med konto id fra konto der skal genaktiveres
      const lukSvar = await fetch(`/portefoljestyring/genaktiver-konto/${kontoId}`, {
        method: 'POST'
      });

      const lukkeResultater = await lukSvar.json();
      //Tjekker om post gik godt
      if (lukkeResultater.success) {
        alert("Konto er genaktiveret.");
        hentKonti(); // Opdaterer listen af aktive konti på siden
        hentLukkedeKonti() // Opdaterer listen af konti der er lukket 

      } else {
        alert("Noget gik galt.");
      }
    }

    window.hentKonti = hentKonti;

    hentKonti();
    hentLukkedeKonti();

  </script>

</body>


</html>